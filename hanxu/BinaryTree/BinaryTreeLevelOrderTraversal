/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(!root) {
            return res;
        }
        
        queue<TreeNode*> to_process;
        to_process.push(root);
        while(!to_process.empty()) {
            queue<TreeNode*> next_to_process;
            vector<int> cur_level;
            while(!to_process.empty()) {
                auto cur = to_process.front();
                to_process.pop();
                cur_level.push_back(cur->val);
                if(cur->left) {
                    next_to_process.push(cur->left);
                }
                if(cur->right) {
                    next_to_process.push(cur->right);
                }
            }
            res.push_back(cur_level);
            swap(next_to_process, to_process);
        }
        return res;
    }
};
