/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int _max_depth;
    void maxDepth(TreeNode* root, int depth) {
        if (!root) {
            _max_depth = max(_max_depth, depth);
            return;
        }
        
        maxDepth(root->left, depth+1);
        maxDepth(root->right, depth+1);
    }
public:
    int maxDepth(TreeNode* root) {
        if(!root) {
            return 0;
        }
        
        _max_depth = 0;
        maxDepth(root, 0);
        return _max_depth;
    }
};
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(!root) {
            return 0;
        }
        
        int left_depth = maxDepth(root->left);
        int right_depth = maxDepth(root->right);
        
        return max(left_depth, right_depth)+1;
    }
};
